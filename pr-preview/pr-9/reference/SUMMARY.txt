* bloqade
    * [analysis](bloqade/analysis/index.md)
        * [address](bloqade/analysis/address/index.md)
            * [analysis](bloqade/analysis/address/analysis.md)
            * [impls](bloqade/analysis/address/impls.md)
            * [lattice](bloqade/analysis/address/lattice.md)
    * [noise](bloqade/noise/index.md)
        * [native](bloqade/noise/native/index.md)
            * [model](bloqade/noise/native/model.md)
            * [rewrite](bloqade/noise/native/rewrite.md)
            * [stmts](bloqade/noise/native/stmts.md)
    * [pyqrack](bloqade/pyqrack/index.md)
        * [base](bloqade/pyqrack/base.md)
        * [noise](bloqade/pyqrack/noise/index.md)
            * [native](bloqade/pyqrack/noise/native.md)
        * [qasm2](bloqade/pyqrack/qasm2/index.md)
            * [core](bloqade/pyqrack/qasm2/core.md)
            * [parallel](bloqade/pyqrack/qasm2/parallel.md)
            * [uop](bloqade/pyqrack/qasm2/uop.md)
        * [reg](bloqade/pyqrack/reg.md)
        * [target](bloqade/pyqrack/target.md)
    * [qasm2](bloqade/qasm2/index.md)
        * [dialects](bloqade/qasm2/dialects/index.md)
            * [core](bloqade/qasm2/dialects/core/index.md)
                * [address](bloqade/qasm2/dialects/core/address.md)
                * [emit](bloqade/qasm2/dialects/core/emit.md)
                * [stmts](bloqade/qasm2/dialects/core/stmts.md)
                * [typeinfer](bloqade/qasm2/dialects/core/typeinfer.md)
            * [expr](bloqade/qasm2/dialects/expr/index.md)
                * [emit](bloqade/qasm2/dialects/expr/emit.md)
                * [from_python](bloqade/qasm2/dialects/expr/from_python.md)
                * [interp](bloqade/qasm2/dialects/expr/interp.md)
                * [stmts](bloqade/qasm2/dialects/expr/stmts.md)
            * [glob](bloqade/qasm2/dialects/glob.md)
            * [indexing](bloqade/qasm2/dialects/indexing.md)
            * [inline](bloqade/qasm2/dialects/inline.md)
            * [noise](bloqade/qasm2/dialects/noise.md)
            * [parallel](bloqade/qasm2/dialects/parallel.md)
            * [uop](bloqade/qasm2/dialects/uop/index.md)
                * [emit](bloqade/qasm2/dialects/uop/emit.md)
                * [schedule](bloqade/qasm2/dialects/uop/schedule.md)
                * [stmts](bloqade/qasm2/dialects/uop/stmts.md)
        * [emit](bloqade/qasm2/emit/index.md)
            * [base](bloqade/qasm2/emit/base.md)
            * [gate](bloqade/qasm2/emit/gate.md)
            * [main](bloqade/qasm2/emit/main.md)
            * [target](bloqade/qasm2/emit/target.md)
        * [glob](bloqade/qasm2/glob.md)
        * [groups](bloqade/qasm2/groups.md)
        * [parallel](bloqade/qasm2/parallel.md)
        * [parse](bloqade/qasm2/parse/index.md)
            * [ast](bloqade/qasm2/parse/ast.md)
            * [build](bloqade/qasm2/parse/build.md)
            * [lowering](bloqade/qasm2/parse/lowering.md)
            * [parser](bloqade/qasm2/parse/parser.md)
            * [print](bloqade/qasm2/parse/print.md)
            * [visitor](bloqade/qasm2/parse/visitor.md)
        * [passes](bloqade/qasm2/passes/index.md)
            * [fold](bloqade/qasm2/passes/fold.md)
            * [glob](bloqade/qasm2/passes/glob.md)
            * [noise](bloqade/qasm2/passes/noise.md)
            * [parallel](bloqade/qasm2/passes/parallel.md)
            * [py2qasm](bloqade/qasm2/passes/py2qasm.md)
            * [qasm2py](bloqade/qasm2/passes/qasm2py.md)
        * [rewrite](bloqade/qasm2/rewrite/index.md)
            * [desugar](bloqade/qasm2/rewrite/desugar.md)
            * [glob](bloqade/qasm2/rewrite/glob.md)
            * [heuristic_noise](bloqade/qasm2/rewrite/heuristic_noise.md)
            * [native_gates](bloqade/qasm2/rewrite/native_gates.md)
            * [parallel_to_uop](bloqade/qasm2/rewrite/parallel_to_uop.md)
            * [register](bloqade/qasm2/rewrite/register.md)
            * [uop_to_parallel](bloqade/qasm2/rewrite/uop_to_parallel.md)
        * [types](bloqade/qasm2/types.md)
    * [qbraid](bloqade/qbraid/index.md)
        * [lowering](bloqade/qbraid/lowering.md)
        * [schema](bloqade/qbraid/schema.md)
        * [simulation_result](bloqade/qbraid/simulation_result.md)
        * [target](bloqade/qbraid/target.md)
    * [squin](bloqade/squin/index.md)
        * [analysis](bloqade/squin/analysis/index.md)
            * [nsites](bloqade/squin/analysis/nsites/index.md)
                * [analysis](bloqade/squin/analysis/nsites/analysis.md)
                * [impls](bloqade/squin/analysis/nsites/impls.md)
                * [lattice](bloqade/squin/analysis/nsites/lattice.md)
            * [schedule](bloqade/squin/analysis/schedule.md)
        * [groups](bloqade/squin/groups.md)
        * [op](bloqade/squin/op/index.md)
            * [complex](bloqade/squin/op/complex.md)
            * [stmts](bloqade/squin/op/stmts.md)
            * [traits](bloqade/squin/op/traits.md)
            * [types](bloqade/squin/op/types.md)
        * [qubit](bloqade/squin/qubit.md)
        * [wire](bloqade/squin/wire.md)
    * [stim](bloqade/stim/index.md)
        * [dialects](bloqade/stim/dialects/index.md)
            * [aux](bloqade/stim/dialects/aux/index.md)
                * [emit](bloqade/stim/dialects/aux/emit.md)
                * [interp](bloqade/stim/dialects/aux/interp.md)
                * [lowering](bloqade/stim/dialects/aux/lowering.md)
                * [stmts](bloqade/stim/dialects/aux/stmts/index.md)
                    * [annotate](bloqade/stim/dialects/aux/stmts/annotate.md)
                    * [const](bloqade/stim/dialects/aux/stmts/const.md)
                * [types](bloqade/stim/dialects/aux/types.md)
            * [collapse](bloqade/stim/dialects/collapse/index.md)
                * [emit](bloqade/stim/dialects/collapse/emit.md)
                * [stmts](bloqade/stim/dialects/collapse/stmts/index.md)
                    * [measure](bloqade/stim/dialects/collapse/stmts/measure.md)
                    * [pp_measure](bloqade/stim/dialects/collapse/stmts/pp_measure.md)
                    * [reset](bloqade/stim/dialects/collapse/stmts/reset.md)
            * [gate](bloqade/stim/dialects/gate/index.md)
                * [emit](bloqade/stim/dialects/gate/emit.md)
                * [stmts](bloqade/stim/dialects/gate/stmts/index.md)
                    * [base](bloqade/stim/dialects/gate/stmts/base.md)
                    * [clifford_1q](bloqade/stim/dialects/gate/stmts/clifford_1q.md)
                    * [clifford_2q](bloqade/stim/dialects/gate/stmts/clifford_2q.md)
                    * [control_2q](bloqade/stim/dialects/gate/stmts/control_2q.md)
                    * [pp](bloqade/stim/dialects/gate/stmts/pp.md)
            * [noise](bloqade/stim/dialects/noise/index.md)
                * [emit](bloqade/stim/dialects/noise/emit.md)
                * [stmts](bloqade/stim/dialects/noise/stmts.md)
        * [emit](bloqade/stim/emit/index.md)
            * [stim](bloqade/stim/emit/stim.md)
        * [groups](bloqade/stim/groups.md)
    * [test_utils](bloqade/test_utils.md)
    * [types](bloqade/types.md)
    * [visual](bloqade/visual/index.md)
        * [animation](bloqade/visual/animation/index.md)
            * [animate](bloqade/visual/animation/animate.md)
            * [base](bloqade/visual/animation/base.md)
            * [gate_event](bloqade/visual/animation/gate_event.md)
            * [runtime](bloqade/visual/animation/runtime/index.md)
                * [aod](bloqade/visual/animation/runtime/aod.md)
                * [atoms](bloqade/visual/animation/runtime/atoms.md)
                * [ppoly](bloqade/visual/animation/runtime/ppoly.md)
                * [qpustate](bloqade/visual/animation/runtime/qpustate.md)
                * [utils](bloqade/visual/animation/runtime/utils.md)
